name: Plugin Test and Publish

on:
  issues:
    types: [opened, reopened, edited]
  pull_request_target:
    types: [closed]
  issue_comment:
    types: [created]
  pull_request_review:
    types: [submitted]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.issue.number || github.run_id }}
  cancel-in-progress: false

jobs:
  check:
    runs-on: ubuntu-latest
    name: check
    # do not run on forked PRs, do not run on not related issues, do not run on pr comments
    if: |
      !(
        (
          github.event.pull_request &&
          (
            github.event.pull_request.head.repo.fork ||
            !(
              contains(github.event.pull_request.labels.*.name, 'Plugin')
            )
          )
        ) ||
        (
          github.event_name == 'issue_comment' && github.event.issue.pull_request
        )
      )
    steps:
      - run: echo "Check passed"

  plugin_test:
    runs-on: ubuntu-latest
    name: Run Plugin Test
    needs: check
    permissions:
      issues: read
    outputs:
      result: ${{ steps.plugin-test.outputs.RESULT }}
      output: ${{ steps.plugin-test.outputs.OUTPUT }}
      metadata: ${{ steps.plugin-test.outputs.METADATA }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        id: setup_python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Setup Muicebot
        if: ${{ !startsWith(github.event_name, 'pull_request') }}
        run: |
          git clone -b main https://github.com/Moemu/Muicebot.git
          cd Muicebot
          mkdir plugins
          python -m pip install --user pipx
          pdm config python.use_venv false
          pdm install --frozen-lockfile --group dev
          python -m pipx ensurepath
          pipx install nb-cli
          pipx run nb-cli orm upgrade

      - name: Run Test
        id: plugin-test
        if: ${{ !startsWith(github.event_name, 'pull_request') }}
        run: |
          python plugin_test.py